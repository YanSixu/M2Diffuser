name: MotionPolicyTransformer

d_x: 0
lr: ${task.lr}
wd: ${task.wd}
wr: ${task.wr}
train_epoch: ${task.train.num_epochs}

scene_model:
  name: "PointNets"
  num_scene_points: ${task.datamodule.num_scene_points}
  num_agent_points: ${task.datamodule.num_agent_points}
  num_object_points: ${eval:'${task.datamodule.num_object_points} if "${task.type}" != "goal-reach" else 0'}
  num_placement_area_points: ${eval:'${task.datamodule.num_placement_area_points} if "${task.type}" == "place" else 0'}
  num_target_points: ${eval:'${task.datamodule.num_target_points} if "${task.type}" == "goal-reach" else 0'}
  num_points: ${eval:'${model.scene_model.num_scene_points} + ${model.scene_model.num_agent_points} + ${model.scene_model.num_object_points} + 
              ${model.scene_model.num_placement_area_points} + ${model.scene_model.num_target_points}'}

# model_parameters
context_length: 4
embed_dim: 1024 
embed_timesteps: 128
n_inner: ${eval:'4 * ${model.embed_dim}'}
n_layer: 3 
n_head: 2
n_positions: 64
activation_function: 'relu'
resid_pdrop: 0.1
attn_pdrop: 0.1

loss:
  collision_loss: true
  collision_loss_weight: 5
  point_match_loss: true
  # NOTEï¼šSince the kinematic chain error of the agent is transmitted from the base link to 
  # the end effector link, when calculating point match loss, the weight calculated by the 
  # link at the end of the agent should be greater.
  point_match_ratio: [2, 3, 5] # base_pc_num:arm_pc_num:gripper_pc_num
  point_match_loss_weight: 1